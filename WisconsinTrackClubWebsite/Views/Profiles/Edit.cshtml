@model WisconsinTrackClubWebsite.Models.Profile

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="col-xs-12 col-md-8 col-md-push-2 information">
        <h2>Edit Profile</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Profile</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Approved)

                @*<div class="form-group">
                        @Html.DropDownList("GradeItems")
                    </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.YearInSchool, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("YearInSchool", new SelectList(ViewBag.Years, "Key", "Value"), new { @class = "YearList" })
                        @*@Html.EditorFor(model => model.YearInSchool, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.YearInSchool, "", new { @class = "text-danger" })*@
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("State", new SelectList(ViewBag.States, "Key", "Value"), new { @class = "StateList" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("Sex", new SelectList(ViewBag.Sexes, "Key", "Value"), new { @class = "SexList" })
                        @*@Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Major, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Major, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Major, "", new { @class = "text-danger" })
                    </div>
                </div>

   

                    <div class="form-group">
                        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class='col-xs-12 col-md-3 input-group date' id='datetimepicker3'>
                            @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>


                <div class="form-group">
                    @{
                        bool isVisible = Model.IsVisible.HasValue ? Model.IsVisible.Value : false;
                    }
                    @Html.Label("Is Visible", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.CheckBox("IsVisible", isVisible, htmlAttributes: new { @class = "radio" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmergencyContactName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmergencyContactName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmergencyContactName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EmergencyContactPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EmergencyContactPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmergencyContactPhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BackgroundColor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("BackgroundColor", new SelectList(ViewBag.Colors, "Key", "Value"), new { @class = "ColorsList" })
                        @*@Html.EditorFor(model => model.YearInSchool, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearInSchool, "", new { @class = "text-danger" })*@
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to Profile", "Manage", "Account")
        </div>
    </div>
</div>


@section Scripts {
<script>
    $(function () {
        $('#datetimepicker3').datetimepicker({
            format: 'MM/DD/YYYY',
            minDate: '01/01/1990'
        });
    });

    $(function (){
        var value = $('#BackgroundColor').val();
        document.getElementsByTagName('body').style.backgroundColor = value;
    });



    @*$(document).ready(function () {
        document.getElementById("changeColor").style.backgroundColor = @Model.BackgroundColor;
    });*@
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
